#name: Java CI/CD
#on:
#  push:
#    branches: [master]
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Login to Aliyun ACR
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ secrets.ACR_REGISTRY }}
#          username: ${{ secrets.ACR_USERNAME }}
#          password: ${{ secrets.ACR_PASSWORD }}
#      - name: Build and Push Docker Image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.ACR_REGISTRY }}:latest
name: SpringBoot ACR CI/CD

on:
  push:
    branches: [ master ]  # 触发分支

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 签出代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 初始化Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container  # 使用支持跨缓存的后端驱动

      # 缓存Maven依赖（加速构建）
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # 构建Docker镜像
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.ACR_REGISTRY }}:latest
          cache-from: type=gha  # 启用GitHub缓存
          cache-to: type=gha,mode=max

      # 登录ACR
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 推送镜像
      - name: Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}:latest